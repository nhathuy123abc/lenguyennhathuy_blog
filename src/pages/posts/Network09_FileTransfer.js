export default function Network09_FileTransfer() {
  return (
    <div className="p-8 bg-blue-50 min-h-screen">
      <h1 className="text-4xl font-bold text-blue-700 mb-6">
        Truy·ªÅn File Qua M·∫°ng üìÅ
      </h1>

      <p className="text-gray-700 mb-6">
        Ph·∫ßn n√†y s·∫Ω gi√∫p b·∫°n hi·ªÉu nguy√™n l√Ω, giao th·ª©c, c√°ch l·∫≠p tr√¨nh v√† c√°c v·∫•n ƒë·ªÅ b·∫£o m·∫≠t khi x√¢y d·ª±ng h·ªá th·ªëng truy·ªÅn file gi·ªØa client v√† server.
      </p>

      {/* 1Ô∏è‚É£ Kh√°i ni·ªám */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        üß† 1. Kh√°i ni·ªám v·ªÅ File Transfer
      </h2>
      <p className="text-gray-700 mb-4 leading-relaxed">
        File Transfer (truy·ªÅn t·ªáp) l√† qu√° tr√¨nh g·ª≠i ho·∫∑c nh·∫≠n d·ªØ li·ªáu gi·ªØa hai thi·∫øt b·ªã (th∆∞·ªùng l√† client v√† server) th√¥ng qua m·∫°ng m√°y t√≠nh.
      </p>
      <ul className="list-disc ml-6 text-gray-700 mb-4">
        <li>VƒÉn b·∫£n (.txt, .docx)</li>
        <li>H√¨nh ·∫£nh, video (.jpg, .mp4)</li>
        <li>T·∫≠p tin nh·ªã ph√¢n (.zip, .exe, ‚Ä¶)</li>
      </ul>
      <p className="text-gray-700 mb-6">
        üéØ <strong>M·ª•c ti√™u:</strong> G·ª≠i d·ªØ li·ªáu ƒë·∫ßy ƒë·ªß, ch√≠nh x√°c, c√≥ th·ªÉ t·∫°m d·ª´ng ho·∫∑c x√°c nh·∫≠n sau khi truy·ªÅn xong.
      </p>

      {/* 2Ô∏è‚É£ Giao th·ª©c */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        ‚öôÔ∏è 2. C√°c giao th·ª©c truy·ªÅn file ph·ªï bi·∫øn
      </h2>
      <table className="w-full border border-blue-200 text-left mb-6">
        <thead className="bg-blue-100">
          <tr>
            <th className="p-2 border">Giao th·ª©c</th>
            <th className="p-2 border">M√¥ t·∫£</th>
            <th className="p-2 border">Port</th>
            <th className="p-2 border">ƒê·∫∑c ƒëi·ªÉm</th>
          </tr>
        </thead>
        <tbody>
          <tr><td className="p-2 border">FTP</td><td className="p-2 border">Giao th·ª©c truy·ªÅn file c·ªï ƒëi·ªÉn</td><td className="p-2 border">21</td><td className="p-2 border">D·ªÖ d√πng, kh√¥ng m√£ h√≥a</td></tr>
          <tr><td className="p-2 border">SFTP</td><td className="p-2 border">Truy·ªÅn file qua SSH</td><td className="p-2 border">22</td><td className="p-2 border">An to√†n, m√£ h√≥a d·ªØ li·ªáu</td></tr>
          <tr><td className="p-2 border">TFTP</td><td className="p-2 border">Phi√™n b·∫£n r√∫t g·ªçn, kh√¥ng x√°c th·ª±c</td><td className="p-2 border">69</td><td className="p-2 border">Nhanh, d√πng n·ªôi b·ªô</td></tr>
          <tr><td className="p-2 border">HTTP/HTTPS</td><td className="p-2 border">Truy·ªÅn file qua web</td><td className="p-2 border">80/443</td><td className="p-2 border">Ph·ªï bi·∫øn, b·∫£o m·∫≠t cao</td></tr>
          <tr><td className="p-2 border">Custom Socket</td><td className="p-2 border">T·ª± l·∫≠p tr√¨nh b·∫±ng TCP/UDP</td><td className="p-2 border">T√πy ch·ªçn</td><td className="p-2 border">Linh ho·∫°t, h·ªçc t·∫≠p</td></tr>
        </tbody>
      </table>

      {/* 3Ô∏è‚É£ C√°ch ho·∫°t ƒë·ªông */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        üåê 3. C√°ch ho·∫°t ƒë·ªông c·ªßa truy·ªÅn file qua m·∫°ng
      </h2>
      <ul className="list-disc ml-6 text-gray-700 mb-6">
        <li><strong>B∆∞·ªõc 1:</strong> Client g·ª≠i y√™u c·∫ßu (t√™n file, k√≠ch th∆∞·ªõc,...)</li>
        <li><strong>B∆∞·ªõc 2:</strong> Server ph·∫£n h·ªìi v√† chu·∫©n b·ªã l∆∞u tr·ªØ</li>
        <li><strong>B∆∞·ªõc 3:</strong> Truy·ªÅn d·ªØ li·ªáu qua socket ho·∫∑c HTTP</li>
        <li><strong>B∆∞·ªõc 4:</strong> X√°c nh·∫≠n v√† ƒë√≥ng k·∫øt n·ªëi</li>
      </ul>

      {/* 4Ô∏è‚É£ V√≠ d·ª• TCP */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        üíª 4. V√≠ d·ª•: Truy·ªÅn file b·∫±ng TCP Socket (Python)
      </h2>

      <p className="text-blue-800 font-semibold mb-1">üî∏ Server (file_server.py)</p>
      <pre className="bg-gray-900 text-white p-4 rounded-lg mb-4 text-sm overflow-x-auto">
{`import socket

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind(('localhost', 9999))
server.listen(1)
print("Server ƒëang ch·ªù k·∫øt n·ªëi...")

conn, addr = server.accept()
print("K·∫øt n·ªëi t·ª´:", addr)

filename = conn.recv(1024).decode()
print("Nh·∫≠n y√™u c·∫ßu t·∫£i file:", filename)

with open(filename, 'rb') as f:
    data = f.read(1024)
    while data:
        conn.send(data)
        data = f.read(1024)

print("ƒê√£ g·ª≠i file th√†nh c√¥ng!")
conn.close()`}
      </pre>

      <p className="text-blue-800 font-semibold mb-1">üî∏ Client (file_client.py)</p>
      <pre className="bg-gray-900 text-white p-4 rounded-lg mb-6 text-sm overflow-x-auto">
{`import socket

client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect(('localhost', 9999))

filename = 'data.txt'  # File mu·ªën t·∫£i
client.send(filename.encode())

with open('received_' + filename, 'wb') as f:
    while True:
        data = client.recv(1024)
        if not data:
            break
        f.write(data)

print("ƒê√£ nh·∫≠n file th√†nh c√¥ng!")
client.close()`}
      </pre>

      <p className="text-gray-700 mb-6">
        üìò <strong>Gi·∫£i th√≠ch:</strong> Client g·ª≠i t√™n file ‚Üí Server ƒë·ªçc v√† g·ª≠i theo t·ª´ng kh·ªëi d·ªØ li·ªáu ‚Üí Client nh·∫≠n v√† l∆∞u th√†nh file m·ªõi.
      </p>

      {/* 5Ô∏è‚É£ L∆∞u √Ω */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        ‚ö° 5. L∆∞u √Ω khi truy·ªÅn file l·ªõn
      </h2>
      <ul className="list-disc ml-6 text-gray-700 mb-4">
        <li>Chia nh·ªè file (chunk) ƒë·ªÉ tr√°nh tr√†n b·ªô nh·ªõ.</li>
        <li>G·∫Øn header ch·ª©a metadata (t√™n, k√≠ch th∆∞·ªõc, checksum).</li>
        <li>X√°c th·ª±c quy·ªÅn truy c·∫≠p b·∫±ng token ho·∫∑c password.</li>
        <li>M√£ h√≥a d·ªØ li·ªáu b·∫±ng SSL/TLS ho·∫∑c th∆∞ vi·ªán cryptography.</li>
        <li>D√πng checksum (md5, sha256) ƒë·ªÉ ki·ªÉm tra to√†n v·∫πn.</li>
      </ul>
      <pre className="bg-gray-900 text-white p-4 rounded-lg mb-6 text-sm overflow-x-auto">
{`import hashlib

def file_checksum(filename):
    h = hashlib.sha256()
    with open(filename, 'rb') as f:
        while chunk := f.read(4096):
            h.update(chunk)
    return h.hexdigest()`}
      </pre>

      {/* 6Ô∏è‚É£ B·∫£o m·∫≠t */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        üîí 6. B·∫£o m·∫≠t trong truy·ªÅn file
      </h2>
      <table className="w-full border border-blue-200 text-left mb-6">
        <thead className="bg-blue-100">
          <tr>
            <th className="p-2 border">Nguy c∆°</th>
            <th className="p-2 border">Bi·ªán ph√°p</th>
          </tr>
        </thead>
        <tbody>
          <tr><td className="p-2 border">Nghe l√©n (Sniffing)</td><td className="p-2 border">D√πng HTTPS / SFTP</td></tr>
          <tr><td className="p-2 border">Gi·∫£ m·∫°o (Spoofing)</td><td className="p-2 border">X√°c th·ª±c SSL, ch·ª©ng ch·ªâ s·ªë</td></tr>
          <tr><td className="p-2 border">Ch√®n m√£ ƒë·ªôc</td><td className="p-2 border">Qu√©t file tr∆∞·ªõc khi l∆∞u</td></tr>
          <tr><td className="p-2 border">M·∫•t d·ªØ li·ªáu gi·ªØa ch·ª´ng</td><td className="p-2 border">Cho ph√©p resume, ki·ªÉm tra checksum</td></tr>
        </tbody>
      </table>

      <p className="text-gray-700 mb-6">
        üí° V√≠ d·ª•: Khi t·∫£i file t·ª´ Google Drive, tr√¨nh duy·ªát d√πng HTTPS + OAuth2 ‚Üí d·ªØ li·ªáu ƒë∆∞·ª£c m√£ h√≥a v√† ch·ªâ b·∫°n m·ªõi c√≥ quy·ªÅn t·∫£i.
      </p>

      {/* 7Ô∏è‚É£ REST API */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        üß© 7. File Transfer qua HTTP REST API
      </h2>
      <p className="text-gray-700 mb-4">
        Ng√†y nay, h·∫ßu h·∫øt ·ª©ng d·ª•ng truy·ªÅn file qua <strong>REST API</strong> thay v√¨ socket tr·ª±c ti·∫øp.
      </p>

      <p className="text-blue-800 font-semibold mb-1">üî∏ Upload file (POST ‚Äì Flask)</p>
      <pre className="bg-gray-900 text-white p-4 rounded-lg mb-4 text-sm overflow-x-auto">
{`from flask import Flask, request
app = Flask(__name__)

@app.route('/upload', methods=['POST'])
def upload_file():
    file = request.files['file']
    file.save(f'uploads/{file.filename}')
    return {"message": "T·∫£i l√™n th√†nh c√¥ng!"}, 201

if __name__ == '__main__':
    app.run(debug=True)`}
      </pre>

      <p className="text-blue-800 font-semibold mb-1">üî∏ Client (requests)</p>
      <pre className="bg-gray-900 text-white p-4 rounded-lg mb-6 text-sm overflow-x-auto">
{`import requests

files = {'file': open('data.txt', 'rb')}
r = requests.post('http://127.0.0.1:5000/upload', files=files)
print(r.json())`}
      </pre>

      {/* 8Ô∏è‚É£ ·ª®ng d·ª•ng */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        üîç 8. ·ª®ng d·ª•ng th·ª±c t·∫ø
      </h2>
      <table className="w-full border border-blue-200 text-left mb-6">
        <thead className="bg-blue-100">
          <tr>
            <th className="p-2 border">·ª®ng d·ª•ng</th>
            <th className="p-2 border">C√°ch th·ª©c truy·ªÅn file</th>
          </tr>
        </thead>
        <tbody>
          <tr><td className="p-2 border">Google Drive, Dropbox</td><td className="p-2 border">HTTP/HTTPS API + m√£ h√≥a</td></tr>
          <tr><td className="p-2 border">FTP Server n·ªôi b·ªô</td><td className="p-2 border">FTP/SFTP</td></tr>
          <tr><td className="p-2 border">·ª®ng d·ª•ng chat (Zalo, Messenger)</td><td className="p-2 border">TCP Socket + m√£ h√≥a ƒë·∫ßu cu·ªëi</td></tr>
          <tr><td className="p-2 border">H·ªá th·ªëng IoT</td><td className="p-2 border">UDP/MQTT + chunk d·ªØ li·ªáu</td></tr>
        </tbody>
      </table>

      {/* 9Ô∏è‚É£ T·ªïng k·∫øt */}
      <h2 className="text-2xl font-semibold text-blue-600 mb-2">
        üß† 9. T·ªïng k·∫øt
      </h2>
      <table className="w-full border border-blue-200 text-left">
        <thead className="bg-blue-100">
          <tr><th className="p-2 border">Th√†nh ph·∫ßn</th><th className="p-2 border">Vai tr√≤</th></tr>
        </thead>
        <tbody>
          <tr><td className="p-2 border">File Transfer</td><td className="p-2 border">Truy·ªÅn d·ªØ li·ªáu gi·ªØa client‚Äìserver</td></tr>
          <tr><td className="p-2 border">Giao th·ª©c</td><td className="p-2 border">FTP, SFTP, HTTP, Socket</td></tr>
          <tr><td className="p-2 border">Y√™u c·∫ßu k·ªπ thu·∫≠t</td><td className="p-2 border">To√†n v·∫πn, b·∫£o m·∫≠t, x√°c th·ª±c</td></tr>
          <tr><td className="p-2 border">K·ªπ thu·∫≠t b·ªï tr·ª£</td><td className="p-2 border">Chunk, checksum, resume, encryption</td></tr>
          <tr><td className="p-2 border">·ª®ng d·ª•ng</td><td className="p-2 border">Upload, backup, chia s·∫ª, cloud</td></tr>
        </tbody>
      </table>
    </div>
  );
}
